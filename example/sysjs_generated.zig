// Generated by `zig build`; DO NOT EDIT.


const builtin = @import("builtin");



pub const console = struct {

    extern fn sysjs_console_log(string: u32) void;
    pub inline fn log(string: String) void {
        sysjs_console_log(string.id);
    }
    extern fn sysjs_console_log2(string: [*]const u8, string_len: u32, [*]const u8, u32) void;
    pub inline fn log2(string: []const u8, v1: []const u8) void {
        sysjs_console_log2(string.ptr, string.len, v1.ptr, v1.len);
    }
};

pub const TextDecoder = struct {
    id: u32,

    extern fn sysjs_TextDecoder_new() u32;
    pub inline fn new() TextDecoder {
        return TextDecoder{.id = sysjs_TextDecoder_new()};
    }
    extern fn sysjs_TextDecoder_decode(td: u32, str: [*]const u8, str_len: u32) u32;
    pub inline fn decode(td: TextDecoder, str: []const u8) String {
        return String{.id = sysjs_TextDecoder_decode(td.id, str.ptr, str.len)};
    }
};

pub const String = struct {
    id: u32,

    extern fn sysjs_String_new(buf: [*]const u8, buf_len: u32) u32;
    pub inline fn new(buf: []const u8) String {
        return String{.id = sysjs_String_new(buf.ptr, buf.len)};
    }
    extern fn sysjs_String_charAt(string: u32, index: u32) u32;
    pub inline fn charAt(string: String, index: u32) String {
        return String{.id = sysjs_String_charAt(string.id, index)};
    }
};

pub const navigator = struct {


    pub const gpu = struct {

        extern fn sysjs_navigator_gpu_requestAdapter(options: *const CRequestAdapterOptions) void;
        pub inline fn requestAdapter(options: CRequestAdapterOptions) void {
            sysjs_navigator_gpu_requestAdapter(&options);
        }
    };
};

pub const RequestAdapterOptions = struct {
    powerPreference: String,

    pub fn toExtern(s: RequestAdapterOptions) CRequestAdapterOptions {
        return CRequestAdapterOptions{
            .powerPreference = s.powerPreference.id,
        };
    }
};

pub const CRequestAdapterOptions = extern struct {
    powerPreference: u32,

};
pub fn doPrint() void {
    // use console.log
    console.log("zig:js.console.log(\"hello from Zig\")");
}
